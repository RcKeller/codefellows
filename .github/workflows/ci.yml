name: CI
on: [pull_request, push]
jobs:
  lint:
    runs-on: ubuntu-latest # operating system your code will run on
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10.9"
          cache: "pip"
      - run: pip install flake8
      - run: pip install django
      - name: Lint
        id: lint
        run: flake8 . # run flake8 test
        working-directory: ${{ env.BRANCH_NAME }}
        continue-on-error: true
      - name: Skip CI run if tests failed
        if: ${{ steps.lint.outcome == 'failure' }}
        run: |
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test:
    runs-on: ubuntu-latest # operating system your code will run on
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10.9"
          cache: "pip"
      - run: pip install django
      - run: pip install pytest
      # - run: pip install -r requirements.txt # install all our dependencies for the project
      # working-directory: ${{ env.BRANCH_NAME }}
      - name: Unit Tests
        id: pytest
        run: pytest . # run pytest test
        working-directory: ${{ env.BRANCH_NAME }}
        continue-on-error: true # because most classes won't have unit tests
      - name: Skip CI run if tests failed
        if: ${{ steps.pytest.outcome == 'failure' }}
        run: |
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
